@startuml CrossAudit Database Schema
!define LIGHTBLUE #E1F5FE
!define LIGHTGREEN #E8F5E8
!define LIGHTYELLOW #FFFDE7
!define LIGHTPINK #FCE4EC

skinparam packageStyle rectangle
skinparam backgroundColor white

package "Authentication & Users" as AUTH LIGHTBLUE {
  entity "auth.users" as users {
    * id : UUID <<PK>>
    --
    email : VARCHAR
    raw_user_meta_data : JSONB
    created_at : TIMESTAMPTZ
  }
  
  entity "profiles" as profiles {
    * id : UUID <<PK, FK>>
    --
    name : VARCHAR
    email : VARCHAR
    picture_url : TEXT
    first_time : BOOLEAN
    mfa_enabled : BOOLEAN
    created_at : TIMESTAMPTZ
    updated_at : TIMESTAMPTZ
  }
  
  entity "organizations" as organizations {
    * id : UUID <<PK>>
    --
    name : VARCHAR
    tier : VARCHAR
    owner_id : UUID <<FK>>
    created_at : TIMESTAMPTZ
    updated_at : TIMESTAMPTZ
  }
  
  entity "user_organizations" as user_orgs {
    * id : UUID <<PK>>
    --
    user_id : UUID <<FK>>
    org_id : UUID <<FK>>
    role : VARCHAR
    created_at : TIMESTAMPTZ
  }
}

package "RBAC System" as RBAC LIGHTGREEN {
  entity "permissions" as permissions {
    * id : UUID <<PK>>
    --
    name : VARCHAR <<UK>>
    description : TEXT
    resource : VARCHAR
    action : VARCHAR
    created_at : TIMESTAMPTZ
    updated_at : TIMESTAMPTZ
  }
  
  entity "roles" as roles {
    * id : UUID <<PK>>
    --
    organization_id : UUID <<FK>>
    name : VARCHAR
    description : TEXT
    is_system_role : BOOLEAN
    is_default : BOOLEAN
    permissions : JSONB
    created_at : TIMESTAMPTZ
    updated_at : TIMESTAMPTZ
    deleted_at : TIMESTAMPTZ
  }
  
  entity "departments" as departments {
    * id : UUID <<PK>>
    --
    organization_id : UUID <<FK>>
    name : VARCHAR
    description : TEXT
    parent_department_id : UUID <<FK>>
    default_role_id : UUID <<FK>>
    metadata : JSONB
    created_at : TIMESTAMPTZ
    updated_at : TIMESTAMPTZ
    deleted_at : TIMESTAMPTZ
  }
  
  entity "user_roles" as user_roles {
    * id : UUID <<PK>>
    --
    user_id : UUID <<FK>>
    role_id : UUID <<FK>>
    department_id : UUID <<FK>>
    granted_by : UUID <<FK>>
    granted_at : TIMESTAMPTZ
    expires_at : TIMESTAMPTZ
    is_active : BOOLEAN
    metadata : JSONB
    created_at : TIMESTAMPTZ
    updated_at : TIMESTAMPTZ
  }
}

package "Chat System" as CHAT LIGHTYELLOW {
  entity "chat_threads" as chat_threads {
    * id : UUID <<PK>>
    --
    organization_id : UUID <<FK>>
    name : VARCHAR
    description : TEXT
    created_by : UUID <<FK>>
    is_private : BOOLEAN
    participants : UUID[]
    metadata : JSONB
    message_count : INTEGER
    last_message_at : TIMESTAMPTZ
    created_at : TIMESTAMPTZ
    updated_at : TIMESTAMPTZ
    deleted_at : TIMESTAMPTZ
  }
  
  entity "chat_messages" as chat_messages {
    * id : UUID <<PK>>
    --
    thread_id : UUID <<FK>>
    user_id : UUID <<FK>>
    parent_message_id : UUID <<FK>>
    content : TEXT
    content_type : VARCHAR
    message_type : VARCHAR
    sequence_number : INTEGER
    metadata : JSONB
    edited_at : TIMESTAMPTZ
    created_at : TIMESTAMPTZ
    updated_at : TIMESTAMPTZ
    deleted_at : TIMESTAMPTZ
  }
}

package "Document Management" as DOCS LIGHTPINK {
  entity "documents" as documents {
    * id : UUID <<PK>>
    --
    organization_id : UUID <<FK>>
    title : VARCHAR
    description : TEXT
    document_type : VARCHAR
    current_version : INTEGER
    total_versions : INTEGER
    file_size : BIGINT
    mime_type : VARCHAR
    checksum : VARCHAR
    storage_path : TEXT
    sensitivity_level : VARCHAR
    encryption_key_id : UUID
    retention_policy : JSONB
    tags : TEXT[]
    created_by : UUID <<FK>>
    last_modified_by : UUID <<FK>>
    indexed_at : TIMESTAMPTZ
    created_at : TIMESTAMPTZ
    updated_at : TIMESTAMPTZ
    deleted_at : TIMESTAMPTZ
  }
  
  entity "document_versions" as doc_versions {
    * id : UUID <<PK>>
    --
    document_id : UUID <<FK>>
    version_number : INTEGER
    title : VARCHAR
    content_hash : VARCHAR
    file_size : BIGINT
    mime_type : VARCHAR
    storage_path : TEXT
    change_type : VARCHAR
    change_description : TEXT
    diff_data : JSONB
    metadata : JSONB
    created_by : UUID <<FK>>
    parent_version_id : UUID <<FK>>
    is_active : BOOLEAN
    created_at : TIMESTAMPTZ
  }
  
  entity "fragments" as fragments {
    * id : UUID <<PK>>
    --
    document_id : UUID <<FK>>
    version_number : INTEGER
    content : TEXT
    content_preview : TEXT
    page_number : INTEGER
    paragraph_number : INTEGER
    line_start : INTEGER
    line_end : INTEGER
    char_start : INTEGER
    char_end : INTEGER
    fragment_type : VARCHAR
    language : VARCHAR
    confidence_score : DECIMAL
    sensitivity_level : VARCHAR
    embedding : vector(1536)
    metadata : JSONB
    tags : TEXT[]
    is_deprecated : BOOLEAN
    created_at : TIMESTAMPTZ
    updated_at : TIMESTAMPTZ
  }
}

package "API Management" as API LIGHTBLUE {
  entity "api_keys" as api_keys {
    * id : UUID <<PK>>
    --
    organization_id : UUID <<FK>>
    name : VARCHAR
    description : TEXT
    key_hash : VARCHAR
    key_prefix : VARCHAR
    provider : VARCHAR
    scopes : TEXT[]
    rate_limit_rpm : INTEGER
    rate_limit_rph : INTEGER
    usage_count : BIGINT
    last_used_at : TIMESTAMPTZ
    expires_at : TIMESTAMPTZ
    created_by : UUID <<FK>>
    is_active : BOOLEAN
    metadata : JSONB
    created_at : TIMESTAMPTZ
    updated_at : TIMESTAMPTZ
    deleted_at : TIMESTAMPTZ
  }
  
  entity "webhooks" as webhooks {
    * id : UUID <<PK>>
    --
    organization_id : UUID <<FK>>
    name : VARCHAR
    url : TEXT
    secret_hash : VARCHAR
    events : TEXT[]
    content_type : VARCHAR
    timeout_seconds : INTEGER
    retry_config : JSONB
    headers : JSONB
    is_active : BOOLEAN
    last_triggered_at : TIMESTAMPTZ
    total_deliveries : BIGINT
    successful_deliveries : BIGINT
    created_by : UUID <<FK>>
    created_at : TIMESTAMPTZ
    updated_at : TIMESTAMPTZ
    deleted_at : TIMESTAMPTZ
  }
  
  entity "webhook_events" as webhook_events {
    * id : UUID <<PK>>
    --
    webhook_id : UUID <<FK>>
    event_type : VARCHAR
    payload : JSONB
    attempt_number : INTEGER
    http_status : INTEGER
    response_body : TEXT
    response_headers : JSONB
    delivery_duration_ms : INTEGER
    error_message : TEXT
    is_successful : BOOLEAN
    scheduled_at : TIMESTAMPTZ
    attempted_at : TIMESTAMPTZ
    completed_at : TIMESTAMPTZ
    created_at : TIMESTAMPTZ
  }
}

package "AI Governance" as AI LIGHTGREEN {
  entity "policies" as policies {
    * id : UUID <<PK>>
    --
    organization_id : UUID <<FK>>
    name : VARCHAR
    description : TEXT
    policy_type : VARCHAR
    rules : JSONB
    conditions : JSONB
    actions : JSONB
    priority : INTEGER
    is_enabled : BOOLEAN
    applies_to : TEXT[]
    version : VARCHAR
    created_by : UUID <<FK>>
    last_modified_by : UUID <<FK>>
    created_at : TIMESTAMPTZ
    updated_at : TIMESTAMPTZ
    deleted_at : TIMESTAMPTZ
  }
  
  entity "evaluators" as evaluators {
    * id : UUID <<PK>>
    --
    organization_id : UUID <<FK>>
    name : VARCHAR
    description : TEXT
    evaluator_type : VARCHAR
    provider : VARCHAR
    model_config : JSONB
    prompt_template : TEXT
    threshold_config : JSONB
    is_enabled : BOOLEAN
    cost_per_evaluation : DECIMAL
    avg_response_time_ms : INTEGER
    success_rate : DECIMAL
    total_evaluations : BIGINT
    created_by : UUID <<FK>>
    created_at : TIMESTAMPTZ
    updated_at : TIMESTAMPTZ
    deleted_at : TIMESTAMPTZ
  }
}

package "Audit & Metrics" as AUDIT LIGHTYELLOW {
  entity "audit_logs" as audit_logs {
    * id : UUID <<PK>>
    --
    organization_id : UUID <<FK>>
    actor_user_id : UUID <<FK>>
    actor_type : VARCHAR
    action : VARCHAR
    resource_type : VARCHAR
    resource_id : UUID
    target_user_id : UUID <<FK>>
    changes : JSONB
    metadata : JSONB
    ip_address : INET
    user_agent : TEXT
    session_id : VARCHAR
    correlation_id : UUID
    severity : VARCHAR
    created_at : TIMESTAMPTZ
  }
  
  entity "metrics_data" as metrics {
    * id : UUID <<PK>>
    --
    organization_id : UUID <<FK>>
    metric_name : VARCHAR
    metric_type : VARCHAR
    value : DECIMAL
    unit : VARCHAR
    dimensions : JSONB
    timestamp : TIMESTAMPTZ
    retention_days : INTEGER
    created_at : TIMESTAMPTZ
  }
  
  entity "audit_log_auth" as audit_auth {
    * id : UUID <<PK>>
    --
    user_id : UUID <<FK>>
    action : VARCHAR
    ip_address : INET
    user_agent : TEXT
    metadata : JSONB
    created_at : TIMESTAMPTZ
  }
}

' Relationships
users ||--|| profiles : "has profile"
users ||--o{ user_orgs : "belongs to orgs"
organizations ||--o{ user_orgs : "has members"
organizations ||--|| users : "owned by"

organizations ||--o{ roles : "has roles"
organizations ||--o{ departments : "has departments"
departments ||--o{ departments : "parent/child"
roles ||--o{ departments : "default role"
users ||--o{ user_roles : "assigned roles"
roles ||--o{ user_roles : "role assignments"
departments ||--o{ user_roles : "department context"

organizations ||--o{ chat_threads : "org threads"
users ||--o{ chat_threads : "created by"
chat_threads ||--o{ chat_messages : "thread messages"
users ||--o{ chat_messages : "authored by"
chat_messages ||--o{ chat_messages : "reply to"

organizations ||--o{ documents : "org documents"
users ||--o{ documents : "created by"
users ||--o{ documents : "modified by"
documents ||--o{ doc_versions : "document versions"
users ||--o{ doc_versions : "version created by"
doc_versions ||--o{ doc_versions : "parent version"
documents ||--o{ fragments : "document fragments"

organizations ||--o{ api_keys : "org api keys"
users ||--o{ api_keys : "created by"
organizations ||--o{ webhooks : "org webhooks"
users ||--o{ webhooks : "created by"
webhooks ||--o{ webhook_events : "webhook deliveries"

organizations ||--o{ policies : "org policies"
users ||--o{ policies : "created by"
users ||--o{ policies : "modified by"
organizations ||--o{ evaluators : "org evaluators"
users ||--o{ evaluators : "created by"

organizations ||--o{ audit_logs : "org audit logs"
users ||--o{ audit_logs : "actor"
users ||--o{ audit_logs : "target"
organizations ||--o{ metrics : "org metrics"
users ||--o{ audit_auth : "auth events"

@enduml